{"version":3,"sources":["Services/RecipeService.js","Components/Cards.js","Home.js","Components/Header.js","App.js","index.js"],"names":["query","searchParam","a","axios","get","res","data","Cards","props","foodList","console","log","flipOnHover","flipOnClick","flipDirection","className","style","backgroundImage","recipe","image","id","dietLabels","icon","faBurn","Math","floor","calories","label","source","href","url","faChevronRight","faAppleAlt","healthLabels","map","i","key","ingredientLines","ingredient","Home","useState","foodName","setFoodName","setFoodList","isLoading","setIsLoading","onSearchHandler","event","charCode","type","RecipeService","then","hits","catch","err","onKeyPress","placeholder","onChange","target","value","onClick","faUtensils","src","alt","useMemo","food","Header","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f42837c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    query\r\n};\r\n\r\n\r\nasync function query(searchParam) {\r\n    const res = await axios.get(`https://api.edamam.com/search?q=${searchParam}&app_id=0e5eb50c&app_key=e228b6ee20ccd1c4b14a4c5288e3c942`)\r\n    return res.data;\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBurn, faChevronRight, faAppleAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\n\r\n\r\nconst Cards = props => {\r\n    const { foodList } = props\r\n\r\n\r\n    const ImgHeader = () => {\r\n        let style = {\r\n            backgroundImage: 'url(' + foodList.recipe.image + ')',\r\n        };\r\n        return (\r\n            <header style={style} id={foodList.recipe.image} className=\"card-header\">\r\n                <h4 className=\"card-header--title\">{foodList.recipe.dietLabels}</h4>\r\n            </header>\r\n        )\r\n    }\r\n    console.log(foodList)\r\n    return (\r\n        <div>\r\n            <Flippy\r\n                flipOnHover={false} // default false\r\n                flipOnClick={true} // default false\r\n                flipDirection=\"horizontal\" // horizontal or vertical\r\n            >\r\n                <FrontSide>\r\n                    <article className=\"card\">\r\n                        <ImgHeader></ImgHeader>\r\n\r\n                        <div className=\"card-body\">\r\n                            <p className=\"date\"><FontAwesomeIcon icon={faBurn} />&nbsp;{Math.floor(foodList.recipe.calories)} calories</p>\r\n\r\n                            <h2>{foodList.recipe.label}</h2>\r\n\r\n                            <p className=\"body-content\"><strong>From:</strong>{foodList.recipe.source}</p>\r\n                            <p className=\"body-content\"><a href={foodList.recipe.url}>Source</a></p>\r\n\r\n                            <button className=\"button button-primary\">\r\n                                <FontAwesomeIcon icon={faChevronRight} /> Find out more\r\n                </button>\r\n\r\n                        </div>\r\n                    </article>\r\n                </FrontSide>\r\n                <BackSide>\r\n                    <article>\r\n\r\n                        <div className=\"card-body\">\r\n                            <p className=\"date\"><FontAwesomeIcon icon={faAppleAlt} />&nbsp; &nbsp;{foodList.recipe.healthLabels.map((label, i) => (\r\n                                <span key={i}>\r\n                                    {(i ? ', ' : '') + label}&nbsp;\r\n                                </span>\r\n                            ))}</p>\r\n\r\n\r\n                            <p className=\"body-content\"><strong>Ingredients:</strong>&nbsp;{foodList.recipe.ingredientLines.map((ingredient, i) => (\r\n                                <span key={i}>\r\n                                    {(i ? ', ' : '') + ingredient}&nbsp;\r\n                                </span>\r\n                            ))}</p>\r\n\r\n                            <button className=\"button button-primary\">\r\n                                <FontAwesomeIcon icon={faChevronRight} /> Back\r\n                </button>\r\n\r\n                        </div>\r\n                    </article>\r\n                </BackSide>\r\n            </Flippy>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useMemo } from 'react';\r\nimport RecipeService from './Services/RecipeService';\r\nimport Cards from './Components/Cards';\r\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodList, setFoodList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const inputChangeHandler = event => {\r\n        setFoodName(event.target.value)\r\n    }\r\n\r\n    const onSearchHandler = event => {\r\n        if(foodName === '') return;\r\n        if (event.charCode === 13 || event.type === 'click') {\r\n            setFoodList([])\r\n            setIsLoading(true)\r\n            RecipeService.query(foodName).then((res) => {\r\n                setFoodName('');\r\n                setFoodList(res.hits);\r\n                setIsLoading(false);\r\n            }\r\n            ).catch((err) => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-bar\">\r\n                <fieldset className=\"field-container\">\r\n                    <input type=\"text\" onKeyPress={onSearchHandler} placeholder=\"Search...\" className=\"field\" onChange={inputChangeHandler} />\r\n                    <button className=\"search-btn\" onClick={onSearchHandler}>Find!</button>\r\n                    <div className=\"icons-container\">\r\n                        <div className=\"icon-search\"></div>\r\n                        <div className=\"icon-close\">\r\n                            <div className=\"x-up\"></div>\r\n                            <div className=\"x-down\"></div>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n\r\n            {/* <input type=\"text\" placeholder=\"What food are you looking for?\" onChange={inputChangeHandler} value={foodName} />\r\n            <button onClick={onSearchHandler}>Search</button> */}\r\n            <div className=\"astrodivider\"><div className=\"astrodividermask\"></div><span><i><FontAwesomeIcon icon={faUtensils} /></i></span></div>\r\n\r\n            <div className=\"card-layout\">\r\n                {isLoading && (\r\n                    <img src=\"https://samherbert.net/svg-loaders/svg-loaders/puff.svg\" className=\"loading-animation\" alt=\"loading\" />\r\n                )}\r\n\r\n                {useMemo(() =>\r\n                    foodList.map(food => (\r\n                        <Zoom key={food.recipe.calories}>\r\n                            <Cards key={food.recipe.calories} foodList={food} />\r\n                        </Zoom>\r\n                    ))\r\n                    , [foodList])}\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"overlay\">\r\n                    <h1>delicious</h1>\r\n                    <h3>Find Recipe For &nbsp;&nbsp;<strong>Anything!</strong></h3>\r\n                    <span className=\"almost-title\">almost</span>\r\n                    <br />\r\n                </div>\r\n            </header>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\nimport Home from './Home'\nimport './main.scss'\nimport Header from './Components/Header';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header/>\n\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}